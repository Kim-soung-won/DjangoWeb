# Generated by Django 4.2.11 on 2024-04-01 01:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('brand_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('brand_name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'brand',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_who', models.BigIntegerField(blank=True, null=True)),
                ('content', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommentImg',
            fields=[
                ('img_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('img_url', models.CharField(max_length=4000)),
                ('img_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'comment_img',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('coupon_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('used', models.IntegerField(blank=True, null=True)),
                ('coupon_name', models.CharField(max_length=255)),
                ('discount_size', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('discount_price', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'coupon',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerService',
            fields=[
                ('cs_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('content', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=8, null=True)),
            ],
            options={
                'db_table': 'customer_service',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('delivery_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('tg_pnum', models.CharField(max_length=20)),
                ('tg_address', models.CharField(max_length=100)),
                ('state', models.CharField(blank=True, max_length=8, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'delivery',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('total_price', models.IntegerField()),
                ('size', models.CharField(blank=True, max_length=10, null=True)),
                ('count', models.IntegerField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pd_name', models.CharField(max_length=100)),
                ('pd_price', models.IntegerField()),
                ('pd_category', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('count_love', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Testcomment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_name', models.CharField(blank=True, max_length=50, null=True)),
                ('image_content', models.CharField(blank=True, max_length=4000, null=True)),
                ('image_filename', models.CharField(max_length=100)),
                ('image_originalname', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'testcomment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('user_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_email', models.CharField(max_length=100, unique=True)),
                ('user_password', models.CharField(max_length=100)),
                ('user_role', models.CharField(blank=True, max_length=7, null=True)),
                ('user_pnum', models.CharField(max_length=20)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_account',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserImage',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('image_name', models.CharField(blank=True, max_length=255, null=True)),
                ('image_content', models.CharField(blank=True, max_length=255, null=True)),
                ('image1', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'user_image',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserLog',
            fields=[
                ('userlog_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_who', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('doit', models.CharField(blank=True, max_length=7, null=True)),
            ],
            options={
                'db_table': 'user_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CsAnswer',
            fields=[
                ('cs', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='Existing_db.customerservice')),
                ('created_who', models.BigIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('content', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'cs_answer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Love',
            fields=[
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='Existing_db.product')),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'love',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductDetail',
            fields=[
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='Existing_db.product')),
                ('size', models.CharField(max_length=10)),
                ('pd_before_count', models.IntegerField(blank=True, null=True)),
                ('pd_sell_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProductLog',
            fields=[
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='Existing_db.product')),
                ('size', models.CharField(max_length=10)),
                ('count', models.IntegerField()),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'product_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='Existing_db.useraccount')),
                ('name', models.CharField(blank=True, max_length=20, null=True, unique=True)),
            ],
            options={
                'db_table': 'user_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('created_who', models.OneToOneField(db_column='created_who', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='Existing_db.userinfo')),
                ('size', models.CharField(max_length=10)),
                ('count', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cart',
                'managed': False,
            },
        ),
    ]
